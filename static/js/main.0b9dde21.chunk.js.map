{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","App","useState","newTodos","setNewTodos","newTitle","setNewTitle","setUserId","titleError","setTitleError","userError","setUserError","hundleChange","event","target","value","action","method","onSubmit","preventDefault","newTodo","Math","max","trim","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b9dde21.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo has-text-link\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        { 'has-background-success-light': !completed },\n        { 'has-background-warning-light': completed },\n      )}\n    >\n      <h2\n        className={classNames(\n          'TodoInfo__title',\n          { 'has-text-success': !completed },\n          { 'has-text-warning': completed },\n        )}\n      >\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { AppState } from './types/AppState';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [newTodos, setNewTodos] = useState<AppState['newTodos']>(todos);\n  const [newTitle, setNewTitle] = useState<AppState['newTitle']>('');\n  const [userId, setUserId] = useState<AppState['userId']>('');\n  const [titleError, setTitleError] = useState<AppState['titleError']>(false);\n  const [userError, setUserError] = useState<AppState['userError']>(false);\n\n  const hundleChange\n    = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n      const { name, value } = event.target;\n\n      if (name === 'title') {\n        setNewTitle(value);\n        setTitleError(false);\n      }\n\n      if (name === 'user') {\n        setUserId(+value);\n        setUserError(false);\n      }\n    };\n\n  const newTodoId = () => {\n    return Math.max(...newTodos.map(({ id }) => id)) + 1;\n  };\n\n  const hundleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const newTodo: Todo = {\n      id: newTodoId(),\n      userId: +userId,\n      title: newTitle,\n      completed: false,\n      user: getUser(+userId),\n    };\n\n    if (!newTitle.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (newTitle.trim() && userId) {\n      setNewTodos([...newTodos, newTodo]);\n      setNewTitle('');\n      setUserId('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1\n        className=\"title has-text-link has-text-centered mt-5\"\n      >\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"Form box\"\n        onSubmit={hundleSubmit}\n      >\n        <div className=\"field mb-3\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            className=\"input\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={hundleChange}\n          />\n          { titleError\n            && (\n              <span className=\"error has-text-danger\">\n                Please enter a title\n              </span>\n            )}\n        </div>\n\n        <div className=\"field select\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            onChange={hundleChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>{name}</option>\n            ))}\n          </select>\n          { userError\n            && (\n              <span className=\"error has-text-danger\">\n                Please choose a user\n              </span>\n            )}\n        </div>\n        <div className=\"Button mt-5\">\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            className=\"button is-info\"\n          >\n            Add\n          </button>\n        </div>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}